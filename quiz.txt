Practice quiz:

The following questions should be answered after completing v5 of the game
Rabbit Attack.

a. What is the first statement executed when the program is run?
- playing =true

b. What happens if a player enters 'Yes' for to the question "Shall we 
   use the Holy Hand Grenade?"
- use_grenade = true 

c. How many knights begin the attack?
- 5

d. Which statement reduces the number of living knights by one?
- num_knights -= 1

e. Suppose during game play you see the sentence, "All of the knights are 
   dead. You lose." What values are stored in the variables rabbit_is_alive, 
   use_grenade, and num_knights respectively at that point?
- use_grenade= false
- num_knights= 0
- rabbit_is_alive= true

f. Suppose during game play you see the sentence, "Goodbye. Thanks for playing!"
   What value is stored in the variable playing at that point?
- playing = false
   

g. Suppose you play the game and your answers to the question "Shall we 
   use the Holy Hand Grenade?" are as follows:
   
		n, No, no, nope, yup, y
		
   How many knights died?
- 4 knight died
h. Referring to question g - What are the values stored in rabbit_is_alive,
   use_grenade, and num_knights respectively after the last input?
- rabbit_is_alive= true
- use_grenade= true
- num_knights= 1


Make a copy of the program called rabbit_attack_v6.py.

i. Edit the confirm function so that it is not case sensitive. That is,
   answers such as Yes, YES, and yEs should all be treated the same.
- 

j. Compare this version to the original (v1). How would adding the features
   in part i have been more difficult if the game wasn't refactored
   to use a confirm function?
- 

k. List several function calls that could be used to 'unit test' your
   case-insensitive confirm function.
- 

l. Explain how parts of your code become reusable because of refactoring.
   Describe another application where you may be able to use the confirm
   function in multiple instances.

m. Make cool start and end screens using ascii art.
- 
